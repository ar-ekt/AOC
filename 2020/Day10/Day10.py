print(*(lambda adapters: (adapters.count(1) * (adapters.count(3) + 1), __import__("functools").reduce((lambda x, y: x * y), [{1: 1, 2: 2, 3: 4, 4: 7}[seq1] for seq1 in (lambda rec: lambda par1, par2, par3, par4: rec(rec, par1, par2, par3, par4))(lambda part2, adapters, length, ind, seq1s: seq1s if ind == length else (part2(part2, adapters, length, ind+1, seq1s[:-1]+[seq1s[-1]+1]) if adapters[ind] == 1 else (part2(part2, adapters, length, ind+1, seq1s+[0]) if seq1s[-1] != 0 else part2(part2, adapters, length, ind+1, seq1s))))(adapters, len(adapters), 0, [0])])))((lambda adapters: [1] + [adapters[i] - adapters[i-1] for i in range(1, len(adapters))])(sorted(list(map(int, open("Day10.txt").read().split("\n")))))), sep = "\n")
